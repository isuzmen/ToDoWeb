@{
    ViewData["Title"] = "Ana Sayfa";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Genel stil */
        body {
            background-color: #f8f9fa; /* Arka plan rengi */
            color: #333; /* Metin rengi */
        }

        .container {
            background-color: #fff; /* İçerik arka plan rengi */
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Gölge */
        }

        .navbar {
            margin-bottom: 20px;
        }

        /* Bölüm stilleri */
        .bolum1 {
            background-image: url('/Views/images/notealma.png'); /* Arka plan resmi */
            background-size: cover; /* Arka plan resminin boyutunu kapsama yap */
            background-position: center; /* Arka plan resminin konumunu ortala */
            padding: 100px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .bolum2 {
            background-image: url('path/to/image.jpg'); /* Arka plan resmi */
            background-size: cover; /* Arka plan resminin boyutunu kapsama yap */
            background-position: center; /* Arka plan resminin konumunu ortala */
            padding: 90px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

            .bolum h3 {
                margin-bottom: 10px;
                text-align: center; /* Başlık metnini ortala */
                color: yellow; /* Başlık rengi */
            }


        /* Navbar düğmeleri stilleri */
        .navbar .nav-link {
            color: #fff; /* Düğme metin rengi */
        }

            .navbar .nav-link:hover {
                color: #fff; /* Beyaz renk */
            }


        /* Navbar arka plan rengi */
        .navbar {
            background-color: #343a40 !important;
        }
    </style>
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand">TADAA</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a  asp-controller="Home" asp-action="ProfileButton" class="nav-link">Profil</a>
                </li>
                <li class="nav-item">
                    <a  asp-controller="Home" asp-action="LoginButton" class="nav-link">Giriş Yap</a>
                </li>
                <li class="nav-item">
                    <a  asp-controller="Home" asp-action="RegisterButton" class="nav-link">Kayıt Ol</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <h2 class="text-center">Hoş Geldiniz!</h2>
                <p class="text-center">Bu todo uygulaması ile yapılacaklar listesi oluşturabilir ve yönetebilirsiniz.</p>
            </div>
        </div>
    </div>
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-md-4">
                <div class="bolum1 bg-info text-center">
                    <h3>Not Alma</h3>
                    <p>Bu bölümde notlarınızı alabilirsiniz.</p>
                    <form asp-controller="Home" asp-action="NotePageButton" method="post">
                        <button type="submit" class="btn btn-primary">Not Ekle</button>
                    </form>

                </div>
            </div>
            <div class="col-md-4">
                <div class="bolum1 bg-info text-center">
                    <h3>Takvim</h3>
                    <p>Bu bölümde takvim görünümünü görebilirsiniz.</p>
                    <form asp-controller="Home" asp-action="CalenderPageButton" method="post">
                        <button type="submit" class="btn btn-primary">Takvimi Görüntüle</button>
                    </form>
                </div>
            </div>
            <div class="col-md-4">
                <div class="bolum2 bg-info text-center">
                    <h3>Bu günün Görevleri</h3>
                    <p>Bu bölümde bugün yapmanız gereken görevleri görebilirsiniz.</p>
                    <form asp-controller="Home" asp-action="NotePageButton" method="post">
                        <button type="submit" class="btn btn-primary">Görevleri göster</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        const isLeapYear = (year) => {
            return (
                (year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0) ||
                (year % 100 === 0 && year % 400 === 0)
            );
        };
        const getFebDays = (year) => {
            return isLeapYear(year) ? 29 : 28;
        };
        let calendar = document.querySelector('.calendar');
        const month_names = [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
        ];
        let month_picker = document.querySelector('#month-picker');
        const dayTextFormate = document.querySelector('.day-text-formate');
        const timeFormate = document.querySelector('.time-formate');
        const dateFormate = document.querySelector('.date-formate');

        month_picker.onclick = () => {
            month_list.classList.remove('hideonce');
            month_list.classList.remove('hide');
            month_list.classList.add('show');
            dayTextFormate.classList.remove('showtime');
            dayTextFormate.classList.add('hidetime');
            timeFormate.classList.remove('showtime');
            timeFormate.classList.add('hideTime');
            dateFormate.classList.remove('showtime');
            dateFormate.classList.add('hideTime');
        };

        const generateCalendar = (month, year) => {
            let calendar_days = document.querySelector('.calendar-days');
            calendar_days.innerHTML = '';
            let calendar_header_year = document.querySelector('#year');
            let days_of_month = [
                31,
                getFebDays(year),
                31,
                30,
                31,
                30,
                31,
                31,
                30,
                31,
                30,
                31,
            ];

            let currentDate = new Date();

            month_picker.innerHTML = month_names[month];

            calendar_header_year.innerHTML = year;

            let first_day = new Date(year, month);


            for (let i = 0; i <= days_of_month[month] + first_day.getDay() - 1; i++) {

                let day = document.createElement('div');

                if (i >= first_day.getDay()) {
                    day.innerHTML = i - first_day.getDay() + 1;

                    if (i - first_day.getDay() + 1 === currentDate.getDate() &&
                        year === currentDate.getFullYear() &&
                        month === currentDate.getMonth()
                    ) {
                        day.classList.add('current-date');
                    }
                }
                calendar_days.appendChild(day);
            }
        };

        let month_list = calendar.querySelector('.month-list');
        month_names.forEach((e, index) => {
            let month = document.createElement('div');
            month.innerHTML = `<div>${e}</div>`;

            month_list.append(month);
            month.onclick = () => {
                currentMonth.value = index;
                generateCalendar(currentMonth.value, currentYear.value);
                month_list.classList.replace('show', 'hide');
                dayTextFormate.classList.remove('hideTime');
                dayTextFormate.classList.add('showtime');
                timeFormate.classList.remove('hideTime');
                timeFormate.classList.add('showtime');
                dateFormate.classList.remove('hideTime');
                dateFormate.classList.add('showtime');
            };
        });

        (function () {
            month_list.classList.add('hideonce');
        })();
        document.querySelector('#pre-year').onclick = () => {
            --currentYear.value;
            generateCalendar(currentMonth.value, currentYear.value);
        };
        document.querySelector('#next-year').onclick = () => {
            ++currentYear.value;
            generateCalendar(currentMonth.value, currentYear.value);
        };

        let currentDate = new Date();
        let currentMonth = { value: currentDate.getMonth() };
        let currentYear = { value: currentDate.getFullYear() };
        generateCalendar(currentMonth.value, currentYear.value);

        const todayShowTime = document.querySelector('.time-formate');
        const todayShowDate = document.querySelector('.date-formate');

        const currshowDate = new Date();
        const showCurrentDateOption = {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            weekday: 'long',
        };
        const currentDateFormate = new Intl.DateTimeFormat(
            'en-US',
            showCurrentDateOption
        ).format(currshowDate);
        todayShowDate.textContent = currentDateFormate;
        setInterval(() => {
            const timer = new Date();
            const option = {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
            };
            const formateTimer = new Intl.DateTimeFormat('en-us', option).format(timer);
            let time = `${`${timer.getHours()}`.padStart(
                2,
                '0'
            )}:${`${timer.getMinutes()}`.padStart(
                2,
                '0'
            )}: ${`${timer.getSeconds()}`.padStart(2, '0')}`;
            todayShowTime.textContent = formateTimer;
        }, 1000);
    </script>
</body>
</html>
